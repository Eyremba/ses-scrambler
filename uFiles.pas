UNIT uFiles;{$mode delphi}INTERFACE{ Securely delete a file }FUNCTION FSDel(f,p: STRING; passes: CARDINAL): BOOLEAN;IMPLEMENTATIONUSES SysUtils, MyIsaac;// overwrite a file's contents with a given characterPROCEDURE FFill(ch: CHAR; f,p: STRING);	VAR fSz,total,nw: CARDINAL;		bOut: POINTER;		fOut: FILE;		fB : FILE OF BYTE;		fname: STRING;	BEGIN		TRY			// path + filename			fname:=p+f;			{ 1) Get the file's size }			Assign(fB,fname); Reset(fB);			fSz := FileSize(fB);			Close(fB);			{ 2) Set storage size and reserve it }			bOut:=GetMem(fSz);			{ 3) fill the buffer with the character  }			FillChar(bOut^,fSz,ch);			{ 4) write the buffer to file }			Assign(fOut,fname); Rewrite(fOut,1);			total:=0;			REPEAT				BlockWrite(fOut,bOut^,fSz,nw);				INC(total,nw);			UNTIL (nw=0) OR (total>=fSz);		FINALLY			{ 5) flush & close file }			Close(fOut);			{ 7) Free the Heap memory previously allocated }			FreeMem(bOut,fSz);		END;	END;// overwrite a file's contents with pseudo-random bytesPROCEDURE FRand(f,p: STRING);	VAR fSz,n,total,nw: CARDINAL;		bOut: POINTER;		fOut: FILE;		fB : FILE OF BYTE;		fname: STRING;	BEGIN		TRY			// path + filename			fname:=p+f;			{ 1) Get the file's size }			Assign(fB,fname); Reset(fB);			fSz := FileSize(fB);			Close(fB);			{ 2) Set storage size and reserve it }			bOut:=GetMem(fSz);			{ 3) fill the buffer with pseudo-random characters  }			iRandomize;			FOR n := 0 TO fSz-1 DO				byte((bOut+n)^) := iRandB;			{ 4) write the randomized buffer to file }			Assign(fOut,fname); Rewrite(fOut,1);			total:=0;			REPEAT				BlockWrite(fOut,bOut^,fSz,nw);				INC(total,nw);			UNTIL (nw=0) OR (total>=fSz);		FINALLY			{ 5) flush & close file }			Close(fOut);			{ 6) Free the Heap memory previously allocated }			FreeMem(bOut,fSz);		END;	END;	// Shrink a file to <sz> bytes and return new sizeFUNCTION FShrink(f,p: STRING; sz: CARDINAL): CARDINAL;	Var fB 	: File of BYTE;		l 	: Cardinal;		b	: BYTE;		fname: STRING;	BEGIN		TRY			// path and filename			fname := p+f;			Assign(fB,fname);			// open as file of bytes			Reset(fB);			l := 0;			REPEAT				inc(l);				Read(fB,b);			UNTIL l=sz;			Truncate(fB);			FShrink := FileSize(fB);			Close(fB);		EXCEPT			FShrink := 0;		END;	END;		{ Securely delete a file }FUNCTION FSDel(f,p: STRING; passes: CARDINAL): BOOLEAN;	VAR fname,rname: STRING;		n,pass: CARDINAL;	BEGIN		TRY			// sanity check			pass := passes;			if pass < 1 then pass := 1;			// path and filename			fname := p+f;			// randomize ISAAC on NOW			iRandomize;			// randomly rename the file			rname := iRandStr(16,26,ord('a'));			RenameFile(fname, p+rname);			FOR n := 1 TO pass DO BEGIN				// overwrite file contents with zeroes				FFill(chr(0),rname,p);				// overwrite file contents with ones				FFill(chr(1),rname,p);				// overwrite file contents with pseudo-random bytes				FRand(rname,p);			END;			// shrink the file			FShrink(rname,p,1);			// delete the file			DeleteFile(PChar(p+rname));			FSDel := TRUE;		EXCEPT			FSDel := FALSE;		END;	END;END.